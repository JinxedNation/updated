#ifndef DATE_H
#define DATE_H

using std::cout;
using std::cin;
using std::endl;
using std::string;


#include <iostream>


class Date
{
    public:
        Date();
        Date(unsigned temp_Day, unsigned temp_Month, unsigned temp_Year);

            //allows date to be written as a month
        Date(unsigned temp_Day, unsigned temp_Year);
       ~Date();


        /********************************************************************************************************************************************************************************************************************************************************
         * @brief Clear
         * @brief : Sets all the Date Variable values to 0, 0, "", 0
         *
         *
         * @return void
         ********************************************************************************************************************************************************************************************************************************************************/

	void Clear();


        /********************************************************************************************************************************************************************************************************************************************************
         * @brief  : get_The_Day
         * @brief  : gets the unsigned integer the_Day
         *
         *
         * @return  : the_Day (unsigned int)
         ********************************************************************************************************************************************************************************************************************************************************/

	unsigned get_The_Day() const;



		/********************************************************************************************************************************************************************************************************************************************************
		 * @brief   : set_The_Day
		 * @brief   : sets the day variable m_Day
		 *
		 *
		 * @param   : unsigned temp_Day
		 * @return  : void
		 ********************************************************************************************************************************************************************************************************************************************************/

	void set_The_Day(unsigned temp_Day);



		/********************************************************************************************************************************************************************************************************************************************************
		 * @brief   : get_The_Month
		 * @brief   : gets the month as a unsigned const value
		 *
		 *
		 * @return  : m_The_Month (unsigned const )
		 ********************************************************************************************************************************************************************************************************************************************************/

	unsigned get_The_Month() const;



		/********************************************************************************************************************************************************************************************************************************************************
		 * @brief   : set_The_Month
		 * @brief   : sets the m_Month
		 *
		 *
		 * @param   : unsigned temp_Month
		 * @return  : void
		 ********************************************************************************************************************************************************************************************************************************************************/

	void set_The_Month(unsigned temp_Month);


		/********************************************************************************************************************************************************************************************************************************************************
		 * @brief  : get_The_Year
		 * @brief  : gets the year as a unsigned const value
		 *
		 *
		 * @return : m_The_Year (unsigned const)
		 ********************************************************************************************************************************************************************************************************************************************************/

	unsigned get_The_Year() const;



		/********************************************************************************************************************************************************************************************************************************************************
		 * @brief   : set_The_Year
		 * @brief   : sets the m_Year variable
		 *
		 * @param   : unsigned int
		 * @return  : void
		 ********************************************************************************************************************************************************************************************************************************************************/

	void set_The_Year(unsigned temp_Year);





    /***************************
      Operators for the date class
      Equals
      Less than
      assigns
     ***************************/

	//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
			/*			variables for date	                            */
	//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

private:
    ///const unsigned m_Days_In_Month_N[12] = {31,28,31,30,31, 30,31,31,30,31,30,31};


    unsigned m_Day_N;
    unsigned m_Month_N;
    unsigned m_Year_N;
};

   	/******************************************************************************************************
	 * @brief   : std::ostream operator
	 * @brief   : overloads ostream operator to write Date objects
	 *
	 *
	 * @param   : std::ostream& output_s, const Date& date_Marked
	 * @return  : output_s
	 *******************************************************************************************************/

std::ostream& operator <<(std::ostream& output_s, const Date& date_Recorded);



	/******************************************************************************************************
	 * @brief   : istream operator
	 * @brief   : overloads the istream operator to read Date objects
	 *
	 * @param   : std::istream& input, Date& date_Marked
	 * @return  : input
	 *******************************************************************************************************/

std::istream& operator >>(std::istream& input, Date& date_Recorded);



#endif // DATE_H
//-------------------------------------------------------------------------------------------------------------------------------------------------------------
/* End of header */
//-------------------------------------------------------------------
